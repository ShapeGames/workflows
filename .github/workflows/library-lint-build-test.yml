on:
  workflow_call:
    secrets:
      gh_packages_token:
        required: true
      turbo_token:
        required: false
      turbo_team:
        required: false
    inputs:
      node-version:
        type: string
        default: '18'
jobs:
  build_packages:
    name: Build npm package
    runs-on: "ubuntu-latest"
    env:
      TURBO_TOKEN: ${{ secrets.turbo_token }}
      TURBO_TEAM: ${{ secrets.turbo_team }}
      GH_PACKAGES_TOKEN: ${{ secrets.gh_packages_token }}
      NPM_TOKEN: ${{ secrets.gh_packages_token }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Install PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install
      
      - name: Build package build
        run: pnpm build
  build_federation:
    name: Build federation package
    runs-on: "ubuntu-latest"
    env:
      TURBO_TOKEN: ${{ secrets.turbo_token }}
      TURBO_TEAM: ${{ secrets.turbo_team }}
      GH_PACKAGES_TOKEN: ${{ secrets.gh_packages_token }}
      NPM_TOKEN: ${{ secrets.gh_packages_token }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Install PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Build federation
        run: pnpm build-federation
  test:
    name: Lint and Test
    runs-on: "ubuntu-latest"
    env:
      TURBO_TOKEN: ${{ secrets.turbo_token }}
      TURBO_TEAM: ${{ secrets.turbo_team }}
      GH_PACKAGES_TOKEN: ${{ secrets.gh_packages_token }}
      NPM_TOKEN: ${{ secrets.gh_packages_token }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Install PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Lint
        run: pnpm lint
        continue-on-error: true

      - name: Merge lint reports
        run: jq -s '[.[]]|flatten' eslint-reports/*.json &> eslint-reports/eslint_report.json
        continue-on-error: true

      - name: Annotate Code Linting Results
        uses: ataylorme/eslint-annotate-action@1.2.0
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          report-json: "./eslint-reports/eslint_report.json"
        continue-on-error: true

      - name: Upload ESLint report
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: eslint-reports
          path: eslint-reports
        continue-on-error: true

      - name: Test
        run: pnpm test
